class Job:
    def __init__(self, job_id, deadline, profit):
        self.id = job_id
        self.deadline = deadline
        self.profit = profit

def job_scheduling(jobs):
    jobs.sort(key=lambda x: x.profit, reverse=True)
    n = max(job.deadline for job in jobs)
    time_slot = [False] * n
    job_schedule = [None] * n
    total_profit = 0

    for job in jobs:
        for j in range(min(n, job.deadline) - 1, -1, -1):
            if not time_slot[j]:
                time_slot[j] = True
                job_schedule[j] = job.id
                total_profit += job.profit
                break

    print("Job Schedule:", [j for j in job_schedule if j])
    print("Total Profit:", total_profit)

# Get user input
num_jobs = int(input("Enter number of jobs: "))
jobs = []

for i in range(num_jobs):
    job_id = input(f"Enter Job ID for job {i+1}: ")
    deadline = int(input(f"Enter Deadline for job {i+1}: "))
    profit = int(input(f"Enter Profit for job {i+1}: "))
    jobs.append(Job(job_id, deadline, profit))

# Call the function
job_scheduling(jobs)
