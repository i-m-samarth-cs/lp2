# Creating a simple knowledge base as a dictionary
knowledge_base = {}





# Function to add information to the knowledge base
def add_info(key, value):
    knowledge_base[key] = value
    print("Information added successfully.")






# Function to retrieve information from the knowledge base
def retrieve_info(key):
    if key in knowledge_base:
        print(f"{key} -> {knowledge_base[key]}")
    else:
        print("Information not found.")






# Function to delete information from the knowledge base
def delete_info(key):
    if key in knowledge_base:
        del knowledge_base[key]
        print("Information deleted successfully.")
    else:
        print("Information not found.")





# Function to display all information in the knowledge base
def view_all_info():
    if knowledge_base:
        print("\nKnowledge Base Contents:")
        for key, value in knowledge_base.items():
            print(f"{key} -> {value}")
    else:
        print("Knowledge base is empty.")







# Inference engine (menu-driven system)
def information_expert_system():
    while True:
        print("\n--- Information Management Expert System ---")
        print("1. Add Information")
        print("2. Retrieve Information")
        print("3. Delete Information")
        print("4. View All Information")
        print("5. Exit")

        choice = input("Enter your choice (1-5): ")

        if choice == '1':
            key = input("Enter the key: ")
            value = input("Enter the value: ")
            add_info(key, value)

        elif choice == '2':
            key = input("Enter the key to retrieve: ")
            retrieve_info(key)

        elif choice == '3':
            key = input("Enter the key to delete: ")
            delete_info(key)

        elif choice == '4':
            view_all_info()

        elif choice == '5':
            print("Exiting the Expert System. Thank you!")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 5.")









# Running the expert system
information_expert_system()






